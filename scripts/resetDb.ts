import { db, pool } from '../server/db';
import { seed } from '../server/seed';
import { sql } from 'drizzle-orm';

async function resetDatabase() {
  console.log('üßπ Resetting database...');
  
  try {
    // X√≥a d·ªØ li·ªáu t·ª´ t·∫•t c·∫£ c√°c b·∫£ng theo th·ª© t·ª± ƒë√∫ng ƒë·ªÉ tr√°nh vi ph·∫°m r√†ng bu·ªôc kh√≥a ngo·∫°i
    console.log('Deleting all data...');
    
    // Th·ª±c hi·ªán c√¢u l·ªánh DELETE theo th·ª© t·ª± ƒë√∫ng ƒë·ªÉ tr√°nh vi ph·∫°m r√†ng bu·ªôc kh√≥a ngo·∫°i
    await db.execute(sql`DELETE FROM "cart_items"`);
    await db.execute(sql`DELETE FROM "subscribers"`);
    await db.execute(sql`DELETE FROM "products"`);
    await db.execute(sql`DELETE FROM "testimonials"`);
    await db.execute(sql`DELETE FROM "categories"`);
    await db.execute(sql`DELETE FROM "artisans"`);
    await db.execute(sql`DELETE FROM "users"`);
    
    // ƒê·∫∑t l·∫°i c√°c chu·ªói tu·∫ßn t·ª±
    await db.execute(sql`ALTER SEQUENCE categories_id_seq RESTART WITH 1`);
    await db.execute(sql`ALTER SEQUENCE products_id_seq RESTART WITH 1`);
    await db.execute(sql`ALTER SEQUENCE artisans_id_seq RESTART WITH 1`);
    await db.execute(sql`ALTER SEQUENCE testimonials_id_seq RESTART WITH 1`);
    await db.execute(sql`ALTER SEQUENCE cart_items_id_seq RESTART WITH 1`);
    await db.execute(sql`ALTER SEQUENCE subscribers_id_seq RESTART WITH 1`);
    await db.execute(sql`ALTER SEQUENCE users_id_seq RESTART WITH 1`);
    
    console.log('‚úÖ All data deleted successfully!');
    
    // Ch·∫°y l·∫°i t·ªáp seed ƒë·ªÉ t·∫°o d·ªØ li·ªáu m·ªõi
    console.log('Reseeding database...');
    const success = await seed();
    
    if (success) {
      console.log('‚úÖ Database reset and reseeded successfully!');
    } else {
      console.error('‚ùå Failed to reseed database.');
    }
  } catch (error) {
    console.error('‚ùå Error resetting database:', error);
  } finally {
    // ƒê√≥ng k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu
    if (pool) {
      await pool.end();
    }
    process.exit(0);
  }
}

resetDatabase();